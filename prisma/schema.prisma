// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  adminType  String
  imageUrl   String?
  created_at DateTime @default(now())
}

//enum values for Leads model
enum CurrentSOL {
  Cold
  NoResponse
  CallBack
  Connected
}

enum FinalStatus {
  Converted
  InProgress
}

model Leads {
  id                 String       @id @default(uuid())
  mobileNumber       String?      @unique
  dateOfVisit        String?
  name               String?
  villageCity        String?
  district           String?
  state              String?
  sourceOfLead       String?
  currentSOL         CurrentSOL?  @default(Cold)
  callerName         String?
  assignedTo         String?
  finalStatus        FinalStatus? @default(InProgress)
  whatsappUrl        String?
  noteForLead        String?
  isConvertToProject Boolean      @default(false)
  createdAt          DateTime     @default(now())
}

// enum Phase {
//   Single
//   Three
// }

model Project {
  id                     String       @id @default(uuid())
  dateOfLead             String
  name                   String
  mobileNumber           String       @unique
  villageCity            String
  district               String
  state                  String
  assignedTo             String
  phase                  String?
  pspclAccountNo         String?
  dscsSpInds             String?
  pspdlSection           String?
  solarConnectionDemand  String?
  proposedSolarLoad      Float?
  monthlyBill            String?
  monthlyUnitConsumption String?
  positiveNegative       String?
  successRate            String?
  visitStatus            String?
  finalStatus            FinalStatus?
  noteForLead            String?
  isQuotation            Boolean      @default(false)
  isConvertToProject     Boolean      @default(true)
  whatsappLink           String?
  createdAt              DateTime     @default(now())
  newTime                DateTime     @default(now())
}

enum SubSidy {
  Subsidy
  NoSubsidy
}

// enum SolarType {
//   Residential
//   Commercial
//   Industrial
// }

model Quotation {
  id                    String   @id @default(uuid())
  mobileNumber          String   @unique
  name                  String
  district              String
  assignedTo            String
  phase                 String?
  pspclAccountNo        String?
  villageCity           String?
  solarConnectionDemand String?
  pspdlSection          String?
  sanLoad               Float?
  monthlyBill           Float?
  monthlyConsumption    Int?
  proposedSolarLoad     Float?
  subsidy               SubSidy?
  baseAmount            Float?
  gst                   Float?
  totalPrice            Float?
  pic1                  String?
  pic2                  String?
  pic3                  String?
  pic4                  String?
  pic5                  String?
  isQuotation           Boolean  @default(true)
  consumer              Boolean  @default(false)
  paymentDone           Boolean  @default(false)
  createdAt             DateTime @default(now())
}

model Comsumer {
  id           String   @id @default(uuid())
  mobileNumber String   @unique
  name         String
  district     String
  villageCity  String
  consumer     Boolean  @default(true)
  createdAt    DateTime @default(now())
}

model Payment {
  id                  String            @id @default(uuid())
  name                String
  mobileNumber        String            @unique
  villageCity         String
  district            String
  totalProjectCost    Float?
  totalAmountReceived Float?
  pendingAmount       Float?
  paymentDone         Boolean           @default(true)
  createdAt           DateTime          @default(now())
  paymentReceived     PaymentReceived[]
}

model PaymentReceived {
  id             String   @id @default(uuid())
  amountReceived Float
  date           DateTime
  payment        Payment  @relation(fields: [paymentId], references: [id])
  paymentId      String
}

model StockManagement {
  id           String  @id @default(uuid())
  subsidy      SubSidy
  name         String
  villageCity  String
  mobileNumber String  @unique
  district     String
  pspdlSection String
}
